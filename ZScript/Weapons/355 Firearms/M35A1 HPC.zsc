// ------------------------------------------------------------
// SMG
// ------------------------------------------------------------

class HDColt355:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "SMG"
		//$Sprite "C9MPA0"

		+hdweapon.fitsinbackpack
		obituary "%o was soaked by %k's pea stream.";
		weapon.slotnumber 2;
		weapon.selectionorder 125;
		weapon.slotpriority 0.5;
		weapon.kickback 15;
		weapon.bobrangex 0.3;
		weapon.bobrangey 0.6;
		weapon.bobspeed 2.5;
		scale 0.65;
		inventory.pickupmessage "You got the .355 SMG!";
		hdweapon.barrelsize 28,0.9,1;
		hdweapon.refid HDLD_COLT9MM_NORM;
		tag "$TAG_COLTCOMMANDO";
	}
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}
	//override double gunmass(){
	//	return 5+(weaponstatus[COLT9S_MAG]<0)?-0.5:(weaponstatus[COLT9S_MAG]*0.02);
	//}
	
	//override double gunmass(){
	//	if(weaponstatus[COLT9F_HASMASTERKEY]>0){
	//		return 7.35+((weaponstatus[COLT9S_MAG]<0)?-0.5:(weaponstatus[COLT9S_MAG]*0.02))+(weaponstatus[0]&ZM66F_GRENADELOADED?1.:0.);
	//	}else{
	//		return 5.5+(weaponstatus[COLT9S_MAG]<0)?-0.5:(weaponstatus[COLT9S_MAG]*0.02);
	//	}
	//}
	
	//override double weaponbulk(){
	//	int mg=weaponstatus[COLT9S_MAG];
	//	if(mg<0)return 95;
	//	else return (95+ENC_9MAG30_LOADED)+mg*ENC_355_LOADED;
	//}
	
	override void postbeginplay(){
		super.postbeginplay();
		if(weaponstatus[COLT9F_HASMASTERKEY]>0){
			barrellength=35;
			barrelwidth=0.8;
			barreldepth=1;
			//weaponstatus[0]&=~(ZM66F_GLMODE|ZM66F_GRENADELOADED);
			//refid=(weaponstatus[0]&ZM66F_NOFIRESELECT)?HDLD_ZM66SMI:HDLD_ZM66AUT;
		}else{
			barrellength=28;
			barrelwidth=0.5;
			barreldepth=1;
		}
	}
	
	override void tick(){
		super.tick();
		drainheat(COLT9S_HEAT,3);
	}
	
	/*override double weaponbulk(){
		double blx=95;
		if(weaponstatus[COLT9F_HASMASTERKEY]>0){
			blx+=45;
			//if(weaponstatus[0]&ZM66F_GRENADELOADED)blx+=ENC_ROCKETLOADED;
		}
		int mgg=weaponstatus[COLT9S_MAG];
		return blx+(mgg<0?0:((ENC_9MAG30_LOADED)+mgg*ENC_355_LOADED));
	}*/
	
	override double gunmass(){
		return 12+((weaponstatus[COLT9S_MAG]<0)?-0.5:(weaponstatus[COLT9S_MAG]*0.06));
	}
	override double weaponbulk(){
		int mg=weaponstatus[COLT9S_MAG];
		if(mg<0)return 98;
		else return (98+ENC_9MAG30_LOADED)+mg*ENC_355_LOADED;
	}
	
	override void failedpickupunload(){
		failedpickupunloadmag(COLT9S_MAG,"HDColt9mmMag25");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HDRevolverAmmo"))owner.A_DropInventory("HDRevolverAmmo",amt*25);
			else owner.A_DropInventory("HDColt9mmMag25",amt);
		}
	}
	override void ForceBasicAmmo(){
		owner.A_TakeInventory("HDRevolverAmmo");
		owner.A_TakeInventory("HDColt9mmMag25");
		owner.A_GiveInventory("HDColt9mmMag25");
	}
	override string,double getpickupsprite(){
		return "C9MP"..((weaponstatus[COLT9S_MAG]<0)?"B":"A").."0",1.;
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HDColt9mmMag25")));
			if(nextmagloaded>=25){
				sb.drawimage("C9MNORM",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM);
			}else if(nextmagloaded<1){
				sb.drawimage("C9MEMPTY",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.);
			}else sb.drawbar(
				"C9MNORM","C9MGREY",
				nextmagloaded,25,
				(-46,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HDColt9mmMag25"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
		}
		sb.drawwepcounter(hdw.weaponstatus[COLT9S_AUTO],
			-22,-10,"RBRSA3A7","STFULAUT","STFULAUT"
		);
		sb.drawwepnum(hdw.weaponstatus[COLT9S_MAG],25);
		if(hdw.weaponstatus[COLT9S_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
	}
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_RELOAD.."  Reload\n"
		..WEPHELP_FIREMODE.."  Semi/Auto\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		;
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=screen.GetClipRect();
		sb.SetClipRect(
			-16+bob.x,-4+bob.y,32,16,
			sb.DI_SCREEN_CENTER
		);
		vector2 bobb=bob*1.1;
		sb.drawimage(
			"CLT9_ST1",(0,-3.35)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			alpha:0.98,scale:(1.05,1.05)
		);
		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"CLT9_ST2",(0,-13.85)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,scale:(1.30,1.30)
		);
	}
	states{
	select0:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### A 0;
		goto select0small;
	deselect0:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### A 0;
		goto deselect0small;

	ready:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### A 0;
		#### A 1{
			A_SetCrosshair(21);
			A_WeaponReady(WRF_ALL);
		}
		goto readyend;
	user3:
		---- A 0 A_MagManager("HDColt9mmMag25");
		goto ready;
	altfire:
	althold:
		goto nope;
	hold:
		#### A 0{
			if(
				//full auto
				invoker.weaponstatus[COLT9S_AUTO]==1
			)setweaponstate("fire2");
			else setweaponstate("nope");
		}goto fire;
	user2:
	firemode:
		---- A 1{
			int aut=invoker.weaponstatus[COLT9S_AUTO];
			if(aut>=1)invoker.weaponstatus[COLT9S_AUTO]=0;
			else if(aut<0)invoker.weaponstatus[COLT9S_AUTO]=0;
			else invoker.weaponstatus[COLT9S_AUTO]++;
		}goto nope;
	fire:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### A 1;
	fire2:
		#### B 1 offset(0,34){
			if(invoker.weaponstatus[COLT9S_CHAMBER]==2){
				A_GunFlash();
				A_WeaponOffset(frandom(-3,3),frandom(30,33));
			}else{
				if(invoker.weaponstatus[COLT9S_CHAMBER]==1)setweaponstate("clear.jam");
				else setweaponstate("nope");
			}
		}
		#### B 1 offset(0,36);
		#### A 0 A_Jump((invoker.weaponstatus[COLT9S_HEAT]*0.2),"Jammer.Lammy");
		#### A 1 offset(0,33){
			if(invoker.weaponstatus[COLT9S_CHAMBER]==1){
			
				A_EjectCasing("HDSpent355",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,0,-2)
				);
				invoker.weaponstatus[COLT9S_CHAMBER]=0;
			}
			if(invoker.weaponstatus[COLT9S_MAG]>0){
				invoker.weaponstatus[COLT9S_MAG]--;
				invoker.weaponstatus[COLT9S_CHAMBER]=2;
			}
			if(invoker.weaponstatus[COLT9S_AUTO]==1)A_SetTics(1);
			A_WeaponReady(WRF_NOFIRE);
		}
		#### A 0 A_ReFire();
		goto readyend;
	Jammer.Lammy:
		#### A 4 offset(1,38) A_StartSound("weapons/smg/355/fwd",CHAN_7,volume:0.8,pitch:0.8);
		#### A 2 offset(-1,35);
		#### A 2 offset(0,33);
		#### A 1;
		goto nope;
	flash:
		C9MF A 0{
			let bbb=HDBulletActor.FireBullet(self,"HDB_355",speedfactor:1.25);
			if(
				frandom(0,ceilingz-floorz)<bbb.speed*(0.4)
			)A_AlertMonsters(512);
			
			invoker.weaponstatus[COLT9S_HEAT]+=5;

			A_StartSound("weapons/smg/355",CHAN_WEAPON,CHANF_OVERLAP,1.1);
			invoker.weaponstatus[COLT9S_CHAMBER]=1;
		}
		SMR2 A 0 bright
		{
			if(invoker.weaponstatus[COLT9S_MAG]%2)
			setweaponstate("flash.a",PSP_FLASH);
		}
		goto flash.b;
	flash.a: SMR2 AB 0 bright A_Jump(128,"flash.c"); goto flash.c;
	flash.b: SMR2 CD 0 bright A_Jump(128,"flash.c");
	flash.c:
		C9MF # 1 bright{
			HDFlashAlpha(15);
			A_Light1();
		}
		#### A 0 A_MuzzleClimb(-frandom(0.6,0.8),-frandom(0.7,1.0),-frandom(0.6,0.8),-frandom(0.7,1.0));
		goto lightdone;

	clear.jam:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### F 2 offset(2,34) A_JumpIf(invoker.weaponstatus[COLT9S_CHAMBER]<1,"nope");
		#### G 2 offset(5,40) A_StartSound("weapons/smg/355/cock",CHAN_6,0,0.8);
		#### H 1 offset(9,47){
			if(invoker.weaponstatus[COLT9S_CHAMBER]==1){
			
				A_EjectCasing("HDSpent355",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,0,-2)
				);
				invoker.weaponstatus[COLT9S_CHAMBER]=0;
			}
			if(invoker.weaponstatus[COLT9S_MAG]>0){
				invoker.weaponstatus[COLT9S_MAG]--;
				invoker.weaponstatus[COLT9S_CHAMBER]=2;
			}
		}
		#### I 2 offset(7,41);
		#### J 2 offset(6,39);
		#### K 3 offset(5,37);
		#### A 2 offset(2,36);
		goto nope;


	unloadchamber:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### F 2 offset(2,34) A_JumpIf(invoker.weaponstatus[COLT9S_CHAMBER]<1,"nope");
		#### G 2 offset(5,40) A_StartSound("weapons/smg/355/cock",CHAN_6,0,0.8);
		#### H 1 offset(9,47){
			class<actor>which=invoker.weaponstatus[COLT9S_CHAMBER]>1?"PBFlying355Round":"HDSpent355";
			invoker.weaponstatus[COLT9S_CHAMBER]=0;
				
				A_EjectCasing(which,
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,-3,-2)
				);
		}
		#### I 2 offset(7,41);
		#### J 2 offset(6,39);
		#### K 3 offset(5,37);
		#### A 2 offset(2,36);
		goto readyend;
	loadchamber:
		---- A 0 A_JumpIf(invoker.weaponstatus[COLT9S_CHAMBER]>0,"nope");
		---- A 0 A_JumpIf(!countinv("HDRevolverAmmo"),"nope");
		---- A 1 offset(0,34) A_StartSound("weapons/pocket",CHAN_WEAPON,CHANF_OVERLAP);
		---- A 1 offset(2,36);
		#### B 1 offset(5,40);
		#### B 4 offset(4,39){
			if(countinv("HDRevolverAmmo")){
				A_TakeInventory("HDRevolverAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[COLT9S_CHAMBER]=2;
				A_StartSound("weapons/smg/355/fwd",CHAN_7);
			}
		}
		#### B 7 offset(5,37);
		#### B 1 offset(2,36);
		#### A 1 offset(0,34);
		goto readyend;
	user4:
	unload:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### A 0{
			invoker.weaponstatus[0]|=COLT9F_JUSTUNLOAD;
			if(
				invoker.weaponstatus[COLT9S_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[COLT9S_CHAMBER]>0)setweaponstate("unloadchamber");
		}goto nope;
	reload:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### A 0{
			invoker.weaponstatus[0]&=~COLT9F_JUSTUNLOAD;
			if(invoker.weaponstatus[COLT9S_MAG]>=25)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"HDColt9mmMag25")){
				if(
					invoker.weaponstatus[COLT9S_MAG]<0
					&&countinv("HDRevolverAmmo")
				)setweaponstate("loadchamber");
				else setweaponstate("nope");
			}
		}goto unmag;
	unmag:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### A 1 offset(0,34) A_SetCrosshair(21);
		#### A 1 offset(5,38);
		#### A 1 offset(10,42);
		#### C 2 offset(20,46) 
		{if(invoker.weaponstatus[COLT9S_MAG]>=0)A_StartSound("weapons/rifleclick2",CHAN_7);}
		#### D 4 offset(30,52){
			A_MuzzleClimb(0.3,0.4);
			if(invoker.weaponstatus[COLT9S_MAG]>=0)A_StartSound("weapons/rifleunload",CHAN_7);
		}
		#### E 0{
			int magamt=invoker.weaponstatus[COLT9S_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[COLT9S_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HDColt9mmMag25",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HDColt9mmMag25",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HDColt9mmMag25",magamt);
				A_StartSound("weapons/pocket",CHAN_WEAPON,CHANF_OVERLAP);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		#### EE 7 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		#### E 0{
			if(invoker.weaponstatus[0]&COLT9F_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		#### E 0 A_StartSound("weapons/pocket",CHAN_WEAPON,CHANF_OVERLAP);
		#### E 6 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### E 7 offset(34,52) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### E 10 offset(32,50) A_StartSound("weapons/rifleload",CHAN_7);
		#### E 3 offset(32,49){
			let mmm=hdmagammo(findinventory("HDColt9mmMag25"));
			if(mmm){
				invoker.weaponstatus[COLT9S_MAG]=mmm.TakeMag(true);
				A_StartSound("weapons/rifleclick",CHAN_7);
			}
			if(
				invoker.weaponstatus[COLT9S_MAG]<1
				||invoker.weaponstatus[COLT9S_CHAMBER]>1
			)setweaponstate("reloadend");
		}
		goto chamber.cool;
	chamber:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### E 2 offset(33,50){
			invoker.weaponstatus[COLT9S_MAG]--;
			invoker.weaponstatus[COLT9S_CHAMBER]=2;
		}
		#### E 4 offset(32,49) A_StartSound("weapons/smg/355/fwd",CHAN_7);
		goto reloadend;
		
	chamber.cool:
		C9MS A 0 A_JumpIf(invoker.weaponstatus[COLT9F_HASMASTERKEY]>0,2);
		C9MG A 0;
		#### E 2 offset(32,47);
		#### D 2 offset(34,44);
		#### C 2 offset(36,45);
		#### F 2 offset(38,47);
		#### G 2 offset(42,50) A_StartSound("weapons/smg/355/cock",CHAN_6,0,0.8);
		#### H 1 offset(45,52)
		{
			if(invoker.weaponstatus[COLT9S_CHAMBER]==1)
			A_EjectCasing("HDSpent355",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,-5,-2)
				);
			
			invoker.weaponstatus[COLT9S_MAG]--;
			invoker.weaponstatus[COLT9S_CHAMBER]=2;
		}
		#### I 2 offset(46,51);
		#### J 2 offset(47,49);
		#### K 3 offset(43,47);
		#### A 2 offset(40,46);
	reloadend.cool:
		#### A 3 offset(30,46);
		#### A 2 offset(20,42);
		#### A 2 offset(15,38);
		#### A 2 offset(5,34);
		#### A 1 offset(2,33);
		goto nope;

	reloadend:
		#### E 3 offset(30,52);
		#### E 2 offset(20,46);
		#### D 1 offset(10,42);
		#### C 1 offset(5,38);
		#### A 1 offset(0,34);
		goto nope;


	spawn:
		C9MP A -1 nodelay{
			if(invoker.weaponstatus[COLT9S_MAG]<0)frame=1;
		}
	}
	override void initializewepstats(bool idfa){
		weaponspecial = 1337;
		weaponstatus[0]=0;
		weaponstatus[COLT9S_MAG]=25;
		weaponstatus[COLT9S_CHAMBER]=2;
		if(!idfa)weaponstatus[COLT9S_AUTO]=0;
	}
	override void loadoutconfigure(string input){
		int firemode=getloadoutvar(input,"firemode",1);
		if(firemode>0)weaponstatus[COLT9S_AUTO]=clamp(firemode,0,1);
		
		int masterkey=getloadoutvar(input,"masterkey",1);
		if(masterkey>0)weaponstatus[COLT9F_HASMASTERKEY]=clamp(masterkey,0,1);
	}
}

class HDColt9mmMag25:HD9mMag15{
	default{
		//$Category "Ammo/Hideous Destructor/"
		//$Title "SMG Magazine"
		//$Sprite "CLP3A0"
		
		scale 0.65;
		hdmagammo.roundtype "HDRevolverAmmo";
		hdmagammo.roundbulk ENC_355_LOADED;
		hdmagammo.maxperunit 25;
		hdmagammo.magbulk ENC_9MAG30_EMPTY;
		tag "R0355 HPC Magazine";
		inventory.pickupmessage "Picked up an .355 SMG  magazine.";
		hdpickup.refid HDLD_COLT9MM_MAG;
	}
	override string,string,name,double getmagsprite(int thismagamt){
		string magsprite=(thismagamt>0)?"C9MAA0":"C9MAB0";
		return magsprite,"PRNDA0","HDRevolverAmmo",2.;
	}
	override void GetItemsThatUseThis(){
		itemsthatusethis.push("HDColt355");
	}
	states{
	spawn:
		C9MA A -1;
		stop;
	spawnempty:
		C9MA B -1 A_SpawnEmpty();
		stop;
	}
}

class HDColt9mmMag25_Empty:IdleDummy{
	override void postbeginplay(){
		super.postbeginplay();
		HDMagAmmo.SpawnMag(self,"HDColt9mmMag25",0);
		destroy();
	}
}

class PBFlying355Round:HDDebris{
	default{
		bouncesound "misc/casing3";scale 0.6;yscale 0.85;
	}
	
	states{
	spawn:
		PRND A 2 nodelay{
			A_SetRoll(roll+45,SPF_INTERPOLATE);
		}loop;
	death:
		TNT1 A 0{
			let sss=spawn("HDRevolverAmmo",pos);
			sss.roll=roll;
			inventory(sss).amount=1;
		}stop;
	}
}

enum colt9mmstatus{
	COLT9F_JUSTUNLOAD=1,
	COLT9F_UNDERSLUNG=2,
	COLT9F_HASMASTERKEY=8,

	COLT9S_FLAGS=0,
	COLT9S_MAG=1,
	COLT9S_CHAMBER=2, //0 empty, 1 spent, 2 loaded
	COLT9S_AUTO=3, //0 semi, 1 auto
	COLT9S_SG_TUBE=4, //3 rounds
	COLT9S_SG_HAND=5,
	COLT9S_SG_CHAMBER=6,
	COLT9S_HEAT=7,
};
