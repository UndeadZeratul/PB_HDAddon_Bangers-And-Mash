// ------------------------------------------------------------
// SMG
// ------------------------------------------------------------

class HDSurvivalistRifleFNV:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title ".50 AM Rifle"
		//$Sprite "C9MPA0"

		-hdweapon.fitsinbackpack
		obituary "%o didn't survive %k's rifle.";
		weapon.slotnumber 4;
		weapon.selectionorder 125;
		weapon.slotpriority 0.5;
		weapon.kickback 15;
		weapon.bobrangex 0.3;
		weapon.bobrangey 0.6;
		weapon.bobspeed 2.5;
		scale 0.7;
		inventory.pickupmessage "$PICKUP_SURVIVALISTRIFLE_FNV";
		hdweapon.barrelsize 35,0.9,1;
		hdweapon.refid HDLD_SURIVALISTSRIFLE_FNV;
		tag "$TAG_SURVIVALISTRIFLE_FNV";
	
		hdweapon.loadoutcodes "
			\cuoptic - 0/1, whether it has a red dot sight or not";
	}
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}
	
	override void tick(){
		super.tick();
		drainheat(COLT50CS_HEAT,3);
	}
	
	/*override double weaponbulk(){
		double blx=95;
		if(weaponstatus[COLT50CF_HASMASTERKEY]>0){
			blx+=45;
			//if(weaponstatus[0]&ZM66F_GRENADELOADED)blx+=ENC_ROCKETLOADED;
		}
		int mgg=weaponstatus[COLT50CS_MAG];
		return blx+(mgg<0?0:((ENC_9MAG30_LOADED)+mgg*ENC_355_LOADED));
	}*/
	
	override double gunmass(){
		return 17+((weaponstatus[COLT50CS_MAG]<0)?-0.5:(weaponstatus[COLT50CS_MAG]*0.08));
	}
	override double weaponbulk(){
		int mg=weaponstatus[COLT50CS_MAG];
		int opt=(weaponstatus[COLT50CS_OPTIC]*10);
		if(mg<0)return 128+opt;
		else return (128+opt+ENC_50AMMAG_LOADED)+mg*ENC_50AM_LOADED;
	}
	
	override void failedpickupunload(){
		failedpickupunloadmag(COLT50CS_MAG,"HD50AM_Mag");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HD50AM_Ammo"))owner.A_DropInventory("HD50AM_Ammo",amt*8);
			else owner.A_DropInventory("HD50AM_Mag",amt);
		}
	}
	override void ForceBasicAmmo(){
		owner.A_TakeInventory("HD50AM_Ammo");
		owner.A_TakeInventory("HD50AM_Mag");
		owner.A_GiveInventory("HD50AM_Mag");
	}
	override string,double getpickupsprite(bool usespare){
		string spr;
		if(weaponstatus[COLT50CS_MAG]<0){
			if(weaponstatus[COLT50CS_OPTIC]>0)spr="D";
			else spr="B";
		}else{
			if(weaponstatus[COLT50CS_OPTIC]>0)spr="C";
			else spr="A";
		}
		return "C5SP"..spr.."0",1.;
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HD50AM_Mag")));
			if(nextmagloaded>=8){
				sb.drawimage("50AMNORM",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM);
			}else if(nextmagloaded<1){
				sb.drawimage("50AMEMPTY",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.);
			}else sb.drawbar(
				"50AMNORM","50AMGREY",
				nextmagloaded,8,
				(-46,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HD50AM_Mag"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
		}
		//sb.drawwepcounter(hdw.weaponstatus[COLT50CS_AUTO],
		//	-22,-10,"RBRSA3A7","STFULAUT","STFULAUT"
		//);
		sb.drawwepnum(hdw.weaponstatus[COLT50CS_MAG],8);
		if(hdw.weaponstatus[COLT50CS_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
	}
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_RELOAD.."  Reload\n"
		..WEPHELP_FIREMODE.."  Semi/Auto\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		;
	}
	
	override void DrawSightPicture(
	HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
	bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc
	){
		vector2 bobb=bob*1.18;
		double degree=6.;
		int scaledwidth=56;
		int scaledyoffset=(scaledwidth>>1)+12;
		if(weaponstatus[COLT50CS_OPTIC]>0){
		
		
		sb.drawimage(
			"bst_knob",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			scale:(1.3,1)
		);
		if(scopeview)
		{
			double dotoff=max(abs(bob.x),abs(bob.y));

			/*sb.drawimage(
				"SRVR_SC0",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,scale:(1.1,1.1)
			);*/
			
			texman.setcameratotexture(hpc,"HDXCAM_ZM66",degree);
			let cam=texman.CheckForTexture("HDXCAM_ZM66",TexMan.Type_Any);
			double camSize=texman.GetSize(cam);
			sb.DrawCircle(cam,(0,scaledyoffset)+bob,.085,usePixelRatio:true);
			
						if(dotoff<30){
				sb.drawimage(
					"rret7",(0,scaledyoffset)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					alpha:0.8-dotoff*0.01,scale:(1.6,1.6),
					col:0xFF000000|sb.crosshaircolor.GetInt()
				);
			}
			
			sb.drawimage(
				"SRVR_SC0",(0,scaledyoffset)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,scale:(0.9,0.9)
			);
		}
		
		}else{
			int cx,cy,cw,ch;
			[cx,cy,cw,ch]=screen.GetClipRect();
			sb.SetClipRect(
				-16+bob.x,-4+bob.y,32,16,
				sb.DI_SCREEN_CENTER
			);
			vector2 bobb=bob*1.1;
			sb.drawimage(
				"CLT9_ST1",(0,-1.55)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
				alpha:0.98,scale:(0.75,0.75)
			);
			sb.SetClipRect(cx,cy,cw,ch);
			sb.drawimage(
				"CLT9_ST2",(0,-13.85)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,scale:(1.30,1.30)
			);
		}
	}
	
	states{
	select0:
		C6SR A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SR A 0;
		#### A 0;
		goto select0small;
	deselect0:
		C6SR A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SR A 0;
		#### A 0;
		goto deselect0small;

	ready:
		C6SR A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SR A 0;
		#### A 0;
		#### A 1{
			A_SetCrosshair(21);
			A_WeaponReady(WRF_ALL);
		}
		goto readyend;
	user3:
		---- A 0 A_MagManager("HD50AM_Mag");
		goto ready;
	altfire:
	althold:
		goto nope;
	hold:
		#### A 0{
			if(
				//full auto
				invoker.weaponstatus[COLT50CS_AUTO]==1
			)setweaponstate("fire2");
			else setweaponstate("nope");
		}goto fire;
	/*user2:
	firemode:
		---- A 1{
			int aut=invoker.weaponstatus[COLT50CS_AUTO];
			if(aut>=1)invoker.weaponstatus[COLT50CS_AUTO]=0;
			else if(aut<0)invoker.weaponstatus[COLT50CS_AUTO]=0;
			else invoker.weaponstatus[COLT50CS_AUTO]++;
		}goto nope;*/
	fire:
		C6SR A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SR A 0;
		#### A 1;
	fire2:
		#### B 1 offset(0,34){
			if(invoker.weaponstatus[COLT50CS_CHAMBER]==2){
				A_GunFlash();
				A_WeaponOffset(frandom(-3,3),frandom(30,33));
				A_MuzzleClimb(
				-frandom(0.6,0.9),-frandom(1.0,1.1),
				-frandom(0.4,0.6),-frandom(0.6,0.8)
			);
			
			}else{
				if(invoker.weaponstatus[COLT50CS_CHAMBER]==1)setweaponstate("clear.jam");
				else setweaponstate("nope");
			}
		}
		#### B 1 offset(0,36);
		#### A 0 A_Jump((invoker.weaponstatus[COLT50CS_HEAT]*0.9),"Jammer.Lammy");
		#### A 1 offset(0,33){
			if(invoker.weaponstatus[COLT50CS_CHAMBER]==1){
			
				A_EjectCasing("HDSpent50AM",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,0,-2)
				);
				invoker.weaponstatus[COLT50CS_CHAMBER]=0;
			}
			if(invoker.weaponstatus[COLT50CS_MAG]>0){
				invoker.weaponstatus[COLT50CS_MAG]--;
				invoker.weaponstatus[COLT50CS_CHAMBER]=2;
			}
			if(invoker.weaponstatus[COLT50CS_AUTO]==1){A_SetTics(1);A_ReFire();}
			A_WeaponReady(WRF_NOFIRE);
		}
		#### A 0 A_ReFire();
		goto readyend;
	Jammer.Lammy:
		#### A 4 offset(1,38) A_StartSound("weapons/beowulfrifle/fwd",CHAN_7,volume:0.8,pitch:0.8);
		#### A 2 offset(-1,35);
		#### A 2 offset(0,33);
		#### A 1;
		goto nope;
	flash:
		C9MF A 0{
			let bbb=HDBulletActor.FireBullet(self,"HDB_50AM",speedfactor:1.8);
			if(
				frandom(0,ceilingz-floorz)<bbb.speed*(0.4)
			)A_AlertMonsters(512);
			
			invoker.weaponstatus[COLT50CS_HEAT]+=6;

			A_StartSound("weapons/beowulfrifle/fire",CHAN_WEAPON,CHANF_OVERLAP,1.1);
			A_ZoomRecoil(0.935);
			invoker.weaponstatus[COLT50CS_CHAMBER]=1;
		}
		SMR2 A 0 bright
		{
			if(invoker.weaponstatus[COLT50CS_MAG]%2)
			setweaponstate("flash.a",PSP_FLASH);
		}
		goto flash.b;
	flash.a: SMR2 A 0; goto flash.c;
	flash.b: SMR2 B 0;
	flash.c:
		C6SF # 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SF # 0;
		#### # 1 bright{
			HDFlashAlpha(15);
			A_Light1();
		}
		#### A 0 A_MuzzleClimb(-frandom(0.1,0.2),-frandom(0.3,0.5),frandom(0.2,0.3),frandom(0.1,0.3));
		goto lightdone;

	clear.jam:
		C6SR A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SR A 0;
		#### F 2 offset(2,34) A_JumpIf(invoker.weaponstatus[COLT50CS_CHAMBER]<1,"nope");
		#### G 2 offset(5,40) A_StartSound("weapons/beowulfrifle/cock",CHAN_6,0,0.8);
		#### H 1 offset(9,47){
			if(invoker.weaponstatus[COLT50CS_CHAMBER]==1){
			
				A_EjectCasing("HDSpent50AM",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,0,-2)
				);
				invoker.weaponstatus[COLT50CS_CHAMBER]=0;
			}
			if(invoker.weaponstatus[COLT50CS_MAG]>0){
				invoker.weaponstatus[COLT50CS_MAG]--;
				invoker.weaponstatus[COLT50CS_CHAMBER]=2;
			}
		}
		#### I 2 offset(7,41);
		#### J 2 offset(6,39);
		#### K 3 offset(5,37);
		#### A 2 offset(2,36);
		goto nope;


	unloadchamber:
		C6SR A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SR A 0;
		#### F 2 offset(2,34) A_JumpIf(invoker.weaponstatus[COLT50CS_CHAMBER]<1,"nope");
		#### G 2 offset(5,40) A_StartSound("weapons/beowulfrifle/cock",CHAN_6,0,0.8);
		#### H 1 offset(9,47){
			class<actor>which=invoker.weaponstatus[COLT50CS_CHAMBER]>1?"HDLoose50AM":"HDSpent50AM";
			invoker.weaponstatus[COLT50CS_CHAMBER]=0;
				
				A_EjectCasing(which,
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,-3,-2)
				);
		}
		#### I 2 offset(7,41);
		#### J 2 offset(6,39);
		#### K 3 offset(5,37);
		#### A 2 offset(2,36);
		goto readyend;
	loadchamber:
		---- A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_CHAMBER]>0,"nope");
		---- A 0 A_JumpIf(!countinv("HD50AM_Ammo"),"nope");
		---- A 1 offset(0,34) A_StartSound("weapons/pocket",CHAN_WEAPON,CHANF_OVERLAP);
		---- A 1 offset(2,36);
		#### B 1 offset(5,40);
		#### B 4 offset(4,39){
			if(countinv("HD50AM_Ammo")){
				A_TakeInventory("HD50AM_Ammo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[COLT50CS_CHAMBER]=2;
				A_StartSound("weapons/beowulfrifle/fwd",CHAN_7);
			}
		}
		#### B 7 offset(5,37);
		#### B 1 offset(2,36);
		#### A 1 offset(0,34);
		goto readyend;
	user4:
	unload:
		C6SR A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SR A 0;
		#### A 0{
			invoker.weaponstatus[0]|=COLT50CF_JUSTUNLOAD;
			if(
				invoker.weaponstatus[COLT50CS_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[COLT50CS_CHAMBER]>0)setweaponstate("unloadchamber");
		}goto nope;
	reload:
		C5SR A 0;
		#### A 0{
			invoker.weaponstatus[0]&=~COLT50CF_JUSTUNLOAD;
			if(invoker.weaponstatus[COLT50CS_MAG]>=8)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"HD50AM_Mag")){
				if(
					invoker.weaponstatus[COLT50CS_MAG]<0
					&&countinv("HD50AM_Ammo")
				)setweaponstate("loadchamber");
				else setweaponstate("nope");
			}
		}goto unmag;
	unmag:
		C6SR A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SR A 0;
		#### A 1 offset(0,34) A_SetCrosshair(21);
		#### A 1 offset(5,38);
		#### A 1 offset(10,42);
		#### C 2 offset(20,46) 
		{if(invoker.weaponstatus[COLT50CS_MAG]>=0)A_StartSound("weapons/rifleclick2",CHAN_7);}
		#### D 4 offset(30,52){
			A_MuzzleClimb(0.3,0.4);
			if(invoker.weaponstatus[COLT50CS_MAG]>=0)A_StartSound("weapons/rifleunload",CHAN_7);
		}
		#### E 0{
			int magamt=invoker.weaponstatus[COLT50CS_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[COLT50CS_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HD50AM_Mag",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HD50AM_Mag",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HD50AM_Mag",magamt);
				A_StartSound("weapons/pocket",CHAN_WEAPON,CHANF_OVERLAP);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		#### EE 7 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		#### E 0{
			if(invoker.weaponstatus[0]&COLT50CF_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		#### E 0 A_StartSound("weapons/pocket",CHAN_WEAPON,CHANF_OVERLAP);
		#### E 6 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### E 7 offset(34,52) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### E 10 offset(32,50) A_StartSound("weapons/rifleload",CHAN_7);
		#### E 3 offset(32,49){
			let mmm=hdmagammo(findinventory("HD50AM_Mag"));
			if(mmm){
				invoker.weaponstatus[COLT50CS_MAG]=mmm.TakeMag(true);
				A_StartSound("weapons/rifleclick",CHAN_7);
			}
			if(
				invoker.weaponstatus[COLT50CS_MAG]<1
				||invoker.weaponstatus[COLT50CS_CHAMBER]>1
			)setweaponstate("reloadend");
		}
		goto chamber.cool;
	chamber:
		C6SR A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SR A 0;
		#### E 2 offset(33,50){
			invoker.weaponstatus[COLT50CS_MAG]--;
			invoker.weaponstatus[COLT50CS_CHAMBER]=2;
		}
		#### E 4 offset(32,49) A_StartSound("weapons/beowulfrifle/fwd",CHAN_7);
		goto reloadend;
		
	chamber.cool:
		C6SR A 0 A_JumpIf(invoker.weaponstatus[COLT50CS_OPTIC]>0,2);
		C5SR A 0;
		#### E 2 offset(32,47);
		#### D 2 offset(34,44);
		#### C 2 offset(36,45);
		#### F 2 offset(38,47);
		#### G 2 offset(42,50) A_StartSound("weapons/beowulfrifle/cock",CHAN_6,0,0.8);
		#### H 1 offset(45,52)
		{
			if(invoker.weaponstatus[COLT50CS_CHAMBER]==1)
			A_EjectCasing("HDSpent50AM",
					frandom(-1,2),
					(frandom(0.2,0.3),-frandom(9,9.5),frandom(0,0.2)),
					(0,-5,-2)
				);
			
			invoker.weaponstatus[COLT50CS_MAG]--;
			invoker.weaponstatus[COLT50CS_CHAMBER]=2;
		}
		#### I 2 offset(46,51);
		#### J 2 offset(47,49);
		#### K 3 offset(43,47);
		#### A 2 offset(40,46);
	reloadend.cool:
		#### A 3 offset(30,46);
		#### A 2 offset(20,42);
		#### A 2 offset(15,38);
		#### A 2 offset(5,34);
		#### A 1 offset(2,33);
		goto nope;

	reloadend:
		#### E 3 offset(30,52);
		#### E 2 offset(20,46);
		#### D 1 offset(10,42);
		#### C 1 offset(5,38);
		#### A 1 offset(0,34);
		goto nope;

	spawn:
		C5SP A 0;
		C5SP ABCD -1 nodelay{
			if(invoker.weaponstatus[COLT50CS_MAG]<0){
				if(invoker.weaponstatus[COLT50CS_OPTIC]>0)frame=3;
				else frame=1;
			}else{
				if(invoker.weaponstatus[COLT50CS_OPTIC]>0)frame=2;
				else frame=0;
			}
		}stop;
	}
	
	override void loadoutconfigure(string input){
		int firemode=getloadoutvar(input,"firemode",1);
		if(firemode>0)weaponstatus[COLT50CS_AUTO]=clamp(firemode,0,1);
		
		int optic=getloadoutvar(input,"optic",1);
		if(optic>0)weaponstatus[COLT50CS_OPTIC]=clamp(optic,0,1);
	}
	
	override void initializewepstats(bool idfa){
		weaponspecial = 1337;
		weaponstatus[0]=0;
		weaponstatus[COLT50CS_MAG]=8;
		weaponstatus[COLT50CS_CHAMBER]=2;
		if(!idfa)weaponstatus[COLT50CS_AUTO]=0;
	}
}

enum pbsurvivalistriflestatus{
	COLT50CF_JUSTUNLOAD=1,

	COLT50CS_FLAGS=0,
	COLT50CS_MAG=1,
	COLT50CS_CHAMBER=2, //0 empty, 1 spent, 2 loaded
	COLT50CS_AUTO=3, //0 semi, 1 auto
	COLT50CS_HEAT=4,
	COLT50CS_OPTIC=5,
};
