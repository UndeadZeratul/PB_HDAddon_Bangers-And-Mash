// ------------------------------------------------------------
// 6x42mm Sabot Cased Flechette
// ------------------------------------------------------------

class HD_SteyrAICW:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Austere ACW"
		//$Sprite "G11PA0"

		+hdweapon.fitsinbackpack
		obituary "$OB_STEYRAICW";
		weapon.selectionorder 60;
		weapon.slotnumber 4;
		scale 0.55;
		weapon.bobrangex 0.22;
		weapon.bobrangey 0.9;
		inventory.pickupmessage "$PICKUP_STEYRAICW";
		hdweapon.barrelsize 26,0.7,1;
		hdweapon.refid HDLD_STEYRAICW;
		tag "$TAG_STEYRAICW";
		hdweapon.loadoutcodes "
			\cufiremode - 0-1, semi/burst
			\cuzoom - 20-90, 10x the resulting FOV in degrees";
		}
		
			//\cunogl - 0/1, whether it has a launcher
		
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse){return GetSpareWeaponRegular(newowner,reverse);}
	
	override double gunmass(){
		return 13.5+weaponstatus[SACRS_MAG]*0.02;
	}
	override double weaponbulk(){
		double blx=135;
		int mgg=weaponstatus[SACRS_MAG];
		return blx+(mgg<0?0:(ENC_426MAG_LOADED+mgg*ENC_426_LOADED));
	}
	
	override void tick(){
		super.tick();
		drainheat(SACRS_HEAT,2);
	}
	
	override void failedpickupunload(){
		failedpickupunloadmag(SACRS_MAG,"PB_HDSteyrACRMag");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,42);
			if(owner.countinv("HD6mmFlechetteAmmo"))owner.A_DropInventory("HD6mmFlechetteAmmo",amt*42);
			else owner.A_DropInventory("PB_HDSteyrACRMag",amt);
		}
	}
	override string,double getpickupsprite(){
		return "ACWP"..((weaponstatus[SACRS_MAG]<0)?"B":"A").."0",1.;
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("PB_HDSteyrACRMag")));
			if(nextmagloaded>=42){
				sb.drawimage("ACMGNORM",(-48,-3),sb.DI_SCREEN_CENTER_BOTTOM);
			}else if(nextmagloaded<1){
				sb.drawimage("ACMGEMPTY",(-48,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.);
			}else sb.drawbar(
				"ACMGNORM","ACMGGREY",
				nextmagloaded,42,
				(-48,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("PB_HDSteyrACRMag"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);
			
			sb.drawimage("ROQPA0",(-62,-4),sb.DI_SCREEN_CENTER_BOTTOM,scale:(0.6,0.6));
			sb.drawnum(hpl.countinv("HDRocketAmmo"),-56,-8,sb.DI_SCREEN_CENTER_BOTTOM);
			
		}
		
		if(hdw.weaponstatus[0]&SACRF_GLMODE){
			int ab=hdw.airburst;
			sb.drawstring(
				sb.mAmountFont,ab?string.format("%.2f",ab*0.01):"--.--",
				(-22,-15),sb.DI_SCREEN_CENTER_BOTTOM|sb.DI_TEXT_ALIGN_RIGHT,
				ab?Font.CR_WHITE:Font.CR_BLACK
			);
			sb.drawrect(-26,-33+min(16,ab>>9),4,1);
			sb.drawrect(-23,-32,1,16);
			sb.drawrect(-25,-32,1,16);
		}
		else
		{
			sb.drawwepcounter(hdw.weaponstatus[SACRS_AUTO],
				-22,-10,"STSEMAUT","STBURAUT","STFULAUT"
			);
			sb.drawwepnum(hdw.weaponstatus[SACRS_MAG],42);
			if(hdw.weaponstatus[SACRS_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
		}
		
		if(hdw.weaponstatus[SACRS_GLROUND]>=1)
		{
			sb.drawrect(-20,-19,4,2.6);
		}
		
		sb.drawstring(
			sb.pnewsmallfont,((weaponstatus[0]&SACRF_ROCKETMODE)?"RKT":"GL"),
			(-39,-22),sb.DI_TEXT_ALIGN_CENTER|sb.DI_TRANSLATABLE|sb.DI_SCREEN_CENTER_BOTTOM,
			Font.CR_WHITE,scale:(0.4,0.4)
		);
		
	}

	override string gethelptext(){
	
		bool glmode=(weaponstatus[0]&SACRF_GLMODE);
		bool rlmode=(weaponstatus[0]&SACRF_ROCKETMODE);
	
		return
		WEPHELP_FIRESHOOT
		..(WEPHELP_ALTFIRE..(glmode?("  Rifle mode\n"):("  Launcher mode\n")))
		..WEPHELP_RELOAD.."  Reload mag\n"
		..WEPHELP_ALTRELOAD.."	Reload launcher\n"
		..(WEPHELP_USE.."+"..WEPHELP_ALTFIRE..(rlmode?("  Grenade mode\n"):("  Rocket mode\n")))
		//..WEPHELP_USE.."+"..WEPHELP_RELOAD.."  Reload chamber\n"
		..(glmode?(WEPHELP_FIREMODE.."+"..WEPHELP_UPDOWN.."  Airburst\n")
			:(
			(WEPHELP_FIREMODE.."  Semi/Burst/Auto\n"..WEPHELP_ZOOM.."+"..WEPHELP_FIREMODE.."  Zoom\n")))
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOAD..(glmode?("  Unload launcher"):("  Unload mag\n"))
		;
	}


	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		float scaledyoffset=41.9;
		vector2 bobb=bob*1.1;
		
		if(hdw.weaponstatus[0]&SACRF_GLMODE)
		{
			sb.drawimage(
				"ACR_TOP",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
				scale:(1.0,1.0)
			);
	
			if(scopeview)
			{
				double degree=4.;
				double deg=1/degree;
				int scaledwidth=57;
				int cx,cy,cw,ch;
				[cx,cy,cw,ch]=screen.GetClipRect();
				sb.SetClipRect(
					-28+bob.x,13+bob.y,scaledwidth,scaledwidth,
					sb.DI_SCREEN_CENTER
				);
				
				sb.fill(color(255,0,0,0),
					bob.x-30,scaledyoffset+bob.y-30,
					60,60,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER
				);
				
				texman.setcameratotexture(hpc,"HDXCAM_RLAUN",degree);
				let cam  = texman.CheckForTexture("HDXCAM_RLAUN",TexMan.Type_Any);
				double camSize = texman.GetSize(cam);
				sb.DrawCircle(cam,(0,scaledyoffset)+bob*5,.085,usePixelRatio:true);

				screen.SetClipRect(cx,cy,cw,ch);

				sb.drawimage(
					"rlret",(0,scaledyoffset)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					scale:(0.82,0.82)
				);
				sb.SetClipRect(cx,cy,cw,ch);
				sb.drawimage(
					"ACR_SC02",(0,scaledyoffset)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					scale:(1.0,1.0)
				);
				
				sb.drawstring(sb.mAmountFont,string.format("%.2f",airburst*0.01),
				(9.5+bob.x,72+bob.y),sb.DI_SCREEN_CENTER|sb.DI_TEXT_ALIGN_RIGHT,
				airburst?Font.CR_WHITE:Font.CR_DARKGRAY);
				
			}
		}
		else{
		//bobb.y=clamp(bobb.y,-8,8);
		
			sb.drawimage(
				"ACR_TOP",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
				scale:(1.0,1.0)
			);
			
			if(scopeview){
				/*texman.setcameratotexture(hpc,"HDXHCAM3_PB",degree);
				sb.drawimage(
					"HDXHCAM3_PB",(0,scaledyoffset-5.1)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					scale:(0.31,0.31)
				);*/
				double degree=(hdw.weaponstatus[SACRS_ZOOM])*0.1;
				int scaledwidth=57;
				int cx,cy,cw,ch;
				[cx,cy,cw,ch]=screen.GetClipRect();
				sb.SetClipRect(
					-28+bob.x,13+bob.y,scaledwidth,scaledwidth,
					sb.DI_SCREEN_CENTER
				);
				
				sb.fill(color(255,0,0,0),
					bob.x-30,scaledyoffset+bob.y-30,
					60,60,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER
				);
		
				texman.setcameratotexture(hpc,"HDXCAM_ZM66",degree);
				let cam  = texman.CheckForTexture("HDXCAM_ZM66",TexMan.Type_Any);
				sb.DrawCircle(cam,(0,scaledyoffset)+bob*3,.075,usePixelRatio:true);
				
				//sb.drawimage(
				//	"scophole",(0,scaledyoffset-5.1)+bob*3,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
				//	scale:(0.81,0.81)
				//);
				sb.SetClipRect(cx,cy,cw,ch);
				sb.drawimage(
					"ACR_SC01",(0,scaledyoffset)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					scale:(1.0,1.0)
				);
				sb.drawnum(int(degree*10),
					3+bob.x,72+bob.y,sb.DI_SCREEN_CENTER,Font.CR_BLACK
				);
			}
		}
	}
	
	states{
	select0:
	TNT1 A 0;
		ACR2 A 0;
		#### # 0;
		goto select0big;
	deselect0:
		ACR2 A 0;
		#### # 0;
		goto deselect0big;
		
	ready:
		ACR2 A 0;
		#### # 1{
			A_SetCrosshair(21);
			invoker.weaponstatus[SACRS_RATCHET]=0;
			
			if(pressingfiremode()&&invoker.weaponstatus[0]&SACRF_GLMODE){setweaponstate("abadjust");}
			else if(pressingzoom()){A_ZoomAdjust(SACRS_ZOOM,20,90);}
			
			else A_WeaponReady(WRF_ALL);
			
			}
		goto readyend;
		
	user3:
		---- A 0 A_MagManager("PB_HDSteyrACRMag");
		goto ready;
	hold:
		ACR2 A 0{
			if(
				//full auto
				invoker.weaponstatus[SACRS_AUTO]==2
			)setweaponstate("fire2");
			else if(
				//burst
				invoker.weaponstatus[SACRS_AUTO]<1
				||invoker.weaponstatus[SACRS_RATCHET]>2
			)setweaponstate("nope");
		}goto fire2;
	user2:
	firemode:
		---- # 1{
			int aut=invoker.weaponstatus[SACRS_AUTO];
			if(aut>=2)invoker.weaponstatus[SACRS_AUTO]=0;
			else if(aut<0)invoker.weaponstatus[SACRS_AUTO]=0;
			else invoker.weaponstatus[SACRS_AUTO]++;
		}goto nope;
	fire:
		ACR2 # 1 {if(invoker.weaponstatus[0]&SACRF_GLMODE)setweaponstate("firefrag");}
	fire2:
		ACR2 A 1{
			if(invoker.weaponstatus[SACRS_CHAMBER]==2){
				A_GunFlash();
			}else{
				if(invoker.weaponstatus[SACRS_MAG]>0)setweaponstate("chamber");
				else setweaponstate("nope");
			}
		}
		ACR2 B 1;
		#### A 0{
			if(invoker.weaponstatus[SACRS_CHAMBER]==1){
				A_EjectCasing("HDSpent6mmFlechette",
				frandom(-0.5,0.5),
				(frandom(-0.5,0.5),frandom(-0.5,0.5),-4),(-4,0,-6));
				invoker.weaponstatus[SACRS_CHAMBER]=0;
			}
			if(invoker.weaponstatus[SACRS_MAG]>0){
				invoker.weaponstatus[SACRS_MAG]--;
				invoker.weaponstatus[SACRS_CHAMBER]=2;
			}
			if(invoker.weaponstatus[SACRS_AUTO]>0)
			{
			if(invoker.weaponstatus[SACRS_AUTO]==1)
			{invoker.weaponstatus[SACRS_RATCHET]++;}
			A_ReFire();
			}
		}
		goto nope;
	
	flash:
		ACRF C 1 bright{
			A_Light1();
			HDFlashAlpha(-16);
			A_StartSound("weapons/steyracr/fire",CHAN_WEAPON);
			A_ZoomRecoil(min(0.95,1.-0.05*min(invoker.weaponstatus[SACRS_AUTO],1)));
			
			invoker.weaponstatus[SACRS_HEAT]+=random(1,2);
			HDBulletActor.FireBullet(self,"HDB_6mmFlechette",
			spread:0.75,amount:1); //has inaccuracy issues
			
			/*invoker.weaponstatus[SACRS_HEAT]+=random(3,5);
			HDBulletActor.FireBullet(self,"HDB_6mmFlechette_Duplex",
			spread:1.1,amount:3);*/
			
			//distantnoise.make(p,"world/riflefar");
			
			invoker.weaponstatus[SACRS_CHAMBER]=1;
			A_MuzzleClimb(
				-frandom(0.01,0.01),-frandom(0,0.01),
				-0.1,-frandom(0.1,0.2),
				-frandom(0.1,0.3),-frandom(0.1,0.2)
			);
			A_AlertMonsters();
		}
		ACRF A 0
		{
			A_MuzzleClimb(
				-frandom(0.1,0.1),-frandom(0,0.1),
				-0.2,-frandom(0.3,0.4),
				-frandom(0.4,1.4),-frandom(1.3,2.6)
			);
		}
		goto lightdone;


	firefrag:
		#### A 1{
			if(invoker.weaponstatus[SACRS_GLROUND]<=0){
				setweaponstate("nope");
				return;
			}
			A_FireHDGL((invoker.weaponstatus[0]&SACRF_ROCKETMODE)?1:0);
			invoker.weaponstatus[SACRS_HEAT]+=6;
			invoker.weaponstatus[SACRS_GLROUND]--;
			A_StartSound("weapons/grenadeshot",CHAN_WEAPON);
		}
		#### B 2{
			A_ZoomRecoil(0.95);
			A_MuzzleClimb(
				0,0,0,0,
				-1.2,-3.,
				-1.,-2.8
			);
		}
		#### A 2;
		#### A 0;
		goto nope;

	unloadchamber:
		ACR2 CD 2;
		#### E 2 offset(2,34) A_JumpIf(invoker.weaponstatus[SACRS_CHAMBER]<1,"nope");
		#### F 2 offset(5,40) A_StartSound("weapons/steyracr/cock1",CHAN_6,volume:0.6,pitch:0.92);
		#### G 2 offset(6,44){
			class<actor>which=invoker.weaponstatus[SACRS_CHAMBER]>1?"HD6mmFlechetteAmmo":"HDSpent9mm";
			invoker.weaponstatus[SACRS_CHAMBER]=0;
			A_SpawnItemEx(which,
				cos(pitch)*10,0,height-8-sin(pitch)*10,
				vel.x,vel.y,vel.z,
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
		}
		#### G 2 offset(6,40);
		#### G 3 offset(5,38);
		#### H 2 offset(5,37) A_StartSound("weapons/steyracr/cock2",CHAN_6,volume:0.6);
		#### I 2 offset(2,36);
		#### A 2 offset(0,32);
		goto readyend;
	loadchamber:
		---- A 0 A_JumpIf(invoker.weaponstatus[SACRS_CHAMBER]>0,"nope");
		---- A 0 A_JumpIf(!countinv("HD6mmFlechetteAmmo"),"nope");
		---- C 1;
		---- D 1 offset(0,34) A_StartSound("weapons/pocket",CHAN_5);
		#### E 2 offset(2,36);
		#### F 2 offset(3,38) A_StartSound("weapons/steyracr/cock1",CHAN_6,volume:0.6,pitch:0.92);
		#### G 2 offset(5,40);
		#### G 4 offset(4,39){
			if(countinv("HD6mmFlechetteAmmo")){
				A_TakeInventory("HD6mmFlechetteAmmo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[SACRS_CHAMBER]=2;
				A_StartSound("weapons/rifleclick2",CHAN_7);
			}
		}
		#### G 7 offset(5,37);
		#### H 1 offset(2,36) A_StartSound("weapons/steyracr/cock2",CHAN_6,volume:0.6);
		#### I 1 offset(0,34);
		#### A 2 offset(0,32);
		goto readyend;
	user4:
	unload:
		ACR2 A 0;
		#### A 0{
			invoker.weaponstatus[0]|=SACRF_JUSTUNLOAD;
			if(invoker.weaponstatus[0]&SACRF_GLMODE)
			{setweaponstate("unloadgrenade");}
			else if(invoker.weaponstatus[SACRS_MAG]>=0)
			{setweaponstate("unmag");}			
			else if(invoker.weaponstatus[SACRS_CHAMBER]>0)
			{setweaponstate("unloadchamber");}
		}goto nope;
	reload:
		ACR2 A 0;
		#### A 0{
			invoker.weaponstatus[0]&=~SACRF_JUSTUNLOAD;
			if(invoker.weaponstatus[SACRS_MAG]>=42)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"PB_HDSteyrACRMag")){
				if(
					invoker.weaponstatus[SACRS_MAG]<0
					&&countinv("HD6mmFlechetteAmmo")
				)setweaponstate("loadchamber");
				else setweaponstate("nope");
			}
		}goto unmag;
	unmag:
		ACR2 A 0;
		#### A 1 offset(0,34) A_SetCrosshair(21);
		#### A 1 offset(5,38);
		#### A 1 offset(10,42);
		#### A 2 offset(20,46);
		#### A 4 offset(30,52){
			A_MuzzleClimb(0.3,0.4);
			//if(invoker.weaponstatus[SACRS_MAG]>-1)
			A_StartSound("weapons/rifleclick2",CHAN_7,volume:0.25);
		}
		#### A 0{
			int magamt=invoker.weaponstatus[SACRS_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[SACRS_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("PB_HDSteyrACRMag",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"PB_HDSteyrACRMag",magamt);
				A_StartSound("weapons/rifleunload",CHAN_7);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"PB_HDSteyrACRMag",magamt);
				A_StartSound("weapons/pocket",CHAN_WEAPON);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		#### AA 7 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		#### A 4 offset(33,52);
		#### A 7 offset(34,54);
		#### A 0{
			if(invoker.weaponstatus[0]&SACRF_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		#### A 0 A_StartSound("weapons/pocket",CHAN_WEAPON);
		#### A 6 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### A 7 offset(34,52) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### A 5 offset(33,50) A_StartSound("weapons/rifleload",CHAN_WEAPON,CHANF_OVERLAP);
		#### A 3 offset(32,48){
			let mmm=hdmagammo(findinventory("PB_HDSteyrACRMag"));
			if(mmm){
				invoker.weaponstatus[SACRS_MAG]=mmm.TakeMag(true);
				//A_StartSound("weapons/rifleload",CHAN_WEAPON,CHANF_OVERLAP);
				A_StartSound("weapons/rifleclick2",CHAN_WEAPON,CHANF_OVERLAP,0.6);
			}
			//if(
			//	invoker.weaponstatus[SACRS_MAG]<1
			//	||invoker.weaponstatus[SACRS_CHAMBER]>0
			//)setweaponstate("reloadend");
		}
		goto reloadend;
		
	chamber:
		ACR2 CD 2;
		#### E 2 offset(2,34);
		#### F 2 offset(5,40) A_StartSound("weapons/steyracr/cock1",CHAN_6,volume:0.6,pitch:0.92);
		#### G 1 offset(6,44){
			invoker.weaponstatus[SACRS_MAG]--;
			invoker.weaponstatus[SACRS_CHAMBER]=2;
		}
		#### G 2 offset(5,38);
		#### H 2 offset(5,37) A_StartSound("weapons/steyracr/cock2",CHAN_6,volume:0.6);
		#### I 2 offset(2,36);
		#### A 2 offset(0,32);
		goto readyend;
	
	/*chamber:
		ACR2 A 0;
		ACR2 CDE 2;
		ACR2 F 2 A_StartSound("weapons/steyracr/cock1",CHAN_6,volume:0.6,pitch:0.92);
		#### G 1 offset(33,46){
			invoker.weaponstatus[SACRS_MAG]--;
			invoker.weaponstatus[SACRS_CHAMBER]=2;
		}
		#### G 2 offset(33,44);
		#### H 2 offset(32,43) A_StartSound("weapons/steyracr/cock2",CHAN_6,volume:0.6);
		#### I 2 offset(31,43);
		#### A 3 offset(30,42);
		#### A 2 offset(20,46);
		#### A 1 offset(10,39);
		goto reloadend.pt2;*/
	reloadend:
		#### A 3 offset(30,52);
		#### A 2 offset(20,46);
		#### A 2 offset(10,42);
		#### A 2 offset(5,35);
		#### A 2 offset(2,33);
		#### A 0 offset(0,32)
		{
		if(
			invoker.weaponstatus[SACRS_MAG]>0
				&&invoker.weaponstatus[SACRS_CHAMBER]<2
			)setweaponstate("chamber");
		}
		goto nope;
	reloadend.pt2:
		#### A 1 offset(5,38);
		#### A 1 offset(1,34);
		goto nope;
		
		
	//Rocket Grenade Mode
	
	altfire:
		#### # 0 
		{
			if(pressinguse())setweaponstate("rocketmode");
		}
		#### # 1 offset(0,33);
		#### # 2 offset(2,35)
		{
			A_StartSound("weapons/rifleclick2",CHAN_6,CHANF_OVERLAP,0.1);
			invoker.weaponstatus[0]^=SACRF_GLMODE;
			A_SetCrosshair(21);
			A_SetHelpText();
			
			//A_WeaponBusy();
		}
		#### # 1 offset(-1,33);
		goto nope;
	
	rocketmode:
		#### # 1 offset(0,34){
			invoker.weaponstatus[0]^=SACRF_ROCKETMODE;
			A_SetCrosshair(21);
			A_SetHelpText();
			
			A_WeaponBusy();
		}
		#### A 2 offset(0,36) A_StartSound("weapons/rockchamber",8);
		#### A 1 offset(0,37);
		#### A 2 offset(-1,38);
		#### A 3 offset(-2,37);
		#### A 2 offset(-1,36);
		#### A 1 offset(0,34);
		goto nope;
	
	
	//reload
	altreload:
		#### A 0{
			{
				invoker.weaponstatus[0]&=~SACRF_JUSTUNLOAD;
				setweaponstate("unloadgrenade");
			}
		}goto nope;
	unloadgrenade:
		#### A 1 offset(0,34){
			A_SetCrosshair(21);
			if(
				(
					//just unloading but no grenade
					invoker.weaponstatus[0]&SACRF_JUSTUNLOAD
					&&invoker.weaponstatus[SACRS_GLROUND]<=0
				)||(
					//reloading but no ammo or already loaded
					!(invoker.weaponstatus[0]&SACRF_JUSTUNLOAD)
					&&(
						!countinv("HDRocketAmmo")
						||invoker.weaponstatus[SACRS_GLROUND]>=1
					)
				)
			){
				setweaponstate("nope");
			}
		}
		#### A 1 offset(-5,40);
		#### A 1 offset(-10,50);
		#### A 1 offset(-15,56);
		#### A 4 offset(-14,54){
			A_StartSound("weapons/pocket",9);
			A_StartSound("weapons/grenopen",8);
		}
		#### A 3 offset(-16,56){
			if(invoker.weaponstatus[SACRS_GLROUND]>=1){
				if(
					(PressingReload()||PressingUnload())
					&&!A_JumpIfInventory("HDRocketAmmo",0,"null")
				){
					A_GiveInventory("HDRocketAmmo");
					A_StartSound("weapons/pocket",9);
					A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
					A_SetTics(6);
				}else A_SpawnItemEx("HDRocketAmmo",
					cos(pitch)*12,0,gunheight()-2-12*sin(pitch),
					vel.x,vel.y,vel.z,
					0,SXF_SETTARGET|SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				invoker.weaponstatus[SACRS_GLROUND]--;
			}
		}
		#### A 0{
			if(invoker.weaponstatus[0]&SACRF_JUSTUNLOAD)setweaponstate("altreloaddone");
		}
		#### AA 8 offset(-16,56)A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		#### A 18 offset(-14,54){
			if(!countinv("HDRocketAmmo"))return;
			A_StartSound("weapons/grenreload",8);
			A_TakeInventory("HDRocketAmmo",1,TIF_NOTAKEINFINITE);
			invoker.weaponstatus[SACRS_GLROUND]++;
		}
		#### B 4 offset(-12,50)A_StartSound("weapons/grenopen",8);
	altreloaddone:
		#### A 1 offset(-15,56);
		#### A 1 offset(-10,50);
		#### A 1 offset(-5,40);
		#### A 1 offset(0,34);
		goto nope;
		
	spawn:
		ACWP AB -1 nodelay{
			if(invoker.weaponstatus[SACRS_MAG]<0)frame=1;
		}
	}
	override void initializewepstats(bool idfa){
		weaponspecial = 1337;
		weaponstatus[0]=0;
		weaponstatus[SACRS_MAG]=42;
		weaponstatus[SACRS_GLROUND]=1;
		weaponstatus[SACRS_CHAMBER]=2;
		weaponstatus[SACRS_ZOOM]=30;
		if(!idfa)weaponstatus[SACRS_AUTO]=0;
	}
	
	override void loadoutconfigure(string input){
		int zoom=getloadoutvar(input,"zoom",3);
		if(zoom>=0)weaponstatus[SACRS_ZOOM]=clamp(zoom,20,90);

			int firemode=getloadoutvar(input,"firemode",1);
			if(firemode>=0){
				weaponstatus[SACRS_AUTO]=clamp(firemode,0,2);
			}
	}
}
